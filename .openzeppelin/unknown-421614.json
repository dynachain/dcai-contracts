{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x5f07d2c830EC0404C34c012014b80D8df2af7017",
      "txHash": "0x3a2034aa70173ebbb94319cd41b187cc2163974c22ad92051f84b62a667a6860",
      "kind": "transparent"
    },
    {
      "address": "0xc329Ba32Fe926a3830D58baDe7182e8D3474A5A3",
      "txHash": "0x41ebb0b52a4526726307c0a3d4ca128fc3913de56abc934d1e8de511568b10e5",
      "kind": "transparent"
    },
    {
      "address": "0x65BBa9A357b4785B8DfCFfcA02140c8e3C0f6f58",
      "txHash": "0x55ecf6c85917d0bf2206810a4477c0c10debacb9ecad4c32dc46aa8f6cb84ddb",
      "kind": "transparent"
    },
    {
      "address": "0x401feE99A639Aa01AEbfbf8482fD902097D7B880",
      "txHash": "0x6711f58efee1654d98cfb8700a1c00ae3cb0c13c18d86e25b149e45c032c5716",
      "kind": "transparent"
    },
    {
      "address": "0x802786430629A5fdCC8bed8146414A9076b8f16E",
      "txHash": "0x81350397ec6f5853e0a04bc55d57876c40005b224ff976a0ae5f3d2e791486a0",
      "kind": "transparent"
    }
  ],
  "impls": {
    "ae0156322747f1e07ec71e83b74f61f828d9b276ca754117d700c729802e4d95": {
      "address": "0x2C1203CD1c9C7451FA8432eCFB4A3d8eF0b28D51",
      "txHash": "0xb51034a27060d89da918e519c78fe7637b223ec225db4ae7923b328c8a6725f7",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_nextId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:19"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2540",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:20"
          },
          {
            "label": "durationInSeconds",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(StakingDuration)4783,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:45"
          },
          {
            "label": "rewardRates",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)4783,t_struct(RewardRate)4798_storage))",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:52"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(StakeInfo)4824_storage)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:67"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:69"
          },
          {
            "label": "totalClaimed",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:70"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)330_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)411_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2540": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(CompoundFrequency)4787": {
            "label": "enum Staking.CompoundFrequency",
            "members": [
              "WEEKLY",
              "DAILY",
              "HOURLY"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(StakingDuration)4783": {
            "label": "enum Staking.StakingDuration",
            "members": [
              "FLEXI",
              "DAYS_30",
              "DAYS_180",
              "DAYS_365"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(StakingDuration)4783,t_struct(RewardRate)4798_storage)": {
            "label": "mapping(enum Staking.StakingDuration => struct Staking.RewardRate)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(StakingDuration)4783,t_uint256)": {
            "label": "mapping(enum Staking.StakingDuration => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)4783,t_struct(RewardRate)4798_storage))": {
            "label": "mapping(uint256 => mapping(enum Staking.StakingDuration => struct Staking.RewardRate))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeInfo)4824_storage)": {
            "label": "mapping(uint256 => struct Staking.StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(RewardRate)4798_storage": {
            "label": "struct Staking.RewardRate",
            "members": [
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "compoundFrequency",
                "type": "t_enum(CompoundFrequency)4787",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)4824_storage": {
            "label": "struct Staking.StakeInfo",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duration",
                "type": "t_enum(StakingDuration)4783",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "71027e6ebb67ffe6500fbcb3c8a1ee95bc719cf7cb6a789322d80b104e5472bf": {
      "address": "0x5d3935A7A11E4F500C84DEC5C03AFfEAC4f51d53",
      "txHash": "0x6f89d4f2a1fcd1da0351aacbe138ae18d2353b3e9b861be179480d79335bae61",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_nextId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:19"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2540",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:20"
          },
          {
            "label": "durationInSeconds",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(StakingDuration)4783,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:45"
          },
          {
            "label": "rewardRates",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)4783,t_struct(RewardRate)4798_storage))",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:52"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(StakeInfo)4824_storage)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:79"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:81"
          },
          {
            "label": "totalClaimed",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:82"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)330_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)411_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2540": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(CompoundFrequency)4787": {
            "label": "enum Staking.CompoundFrequency",
            "members": [
              "WEEKLY",
              "DAILY",
              "HOURLY"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(StakingDuration)4783": {
            "label": "enum Staking.StakingDuration",
            "members": [
              "FLEXI",
              "DAYS_30",
              "DAYS_180",
              "DAYS_365"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(StakingDuration)4783,t_struct(RewardRate)4798_storage)": {
            "label": "mapping(enum Staking.StakingDuration => struct Staking.RewardRate)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(StakingDuration)4783,t_uint256)": {
            "label": "mapping(enum Staking.StakingDuration => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)4783,t_struct(RewardRate)4798_storage))": {
            "label": "mapping(uint256 => mapping(enum Staking.StakingDuration => struct Staking.RewardRate))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeInfo)4824_storage)": {
            "label": "mapping(uint256 => struct Staking.StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(RewardRate)4798_storage": {
            "label": "struct Staking.RewardRate",
            "members": [
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "compoundFrequency",
                "type": "t_enum(CompoundFrequency)4787",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)4824_storage": {
            "label": "struct Staking.StakeInfo",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duration",
                "type": "t_enum(StakingDuration)4783",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "945b59fbbfb501d28a379edb0fbb2bcb44b0399b983df53cb3d6d71bd60d050a": {
      "address": "0xa509bD96886b8c6Bf33b4ABB55309FC0247e27c4",
      "txHash": "0xaa3f6c2cf867294cfe5552a331e1b7ddabb5d5e8926f68358bf51b254faf2cb9",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_nextId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:24"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2540",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:25"
          },
          {
            "label": "durationInSeconds",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(StakingDuration)5213,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:50"
          },
          {
            "label": "rewardRates",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage))",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:57"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(StakeInfo)5256_storage)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:73"
          },
          {
            "label": "lastClaimedAt",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:74"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:76"
          },
          {
            "label": "totalClaimedRewards",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:77"
          },
          {
            "label": "unlockAll",
            "offset": 0,
            "slot": "8",
            "type": "t_bool",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:79"
          },
          {
            "label": "rewardsOperator",
            "offset": 1,
            "slot": "8",
            "type": "t_address",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:81"
          },
          {
            "label": "claims",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:83"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)330_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)411_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2540": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(CompoundFrequency)5217": {
            "label": "enum Staking.CompoundFrequency",
            "members": [
              "WEEKLY",
              "DAILY",
              "HOURLY"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(StakingDuration)5213": {
            "label": "enum Staking.StakingDuration",
            "members": [
              "FLEXI",
              "DAYS_30",
              "DAYS_180",
              "DAYS_365"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage)": {
            "label": "mapping(enum Staking.StakingDuration => struct Staking.RewardRate)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(StakingDuration)5213,t_uint256)": {
            "label": "mapping(enum Staking.StakingDuration => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage))": {
            "label": "mapping(uint256 => mapping(enum Staking.StakingDuration => struct Staking.RewardRate))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeInfo)5256_storage)": {
            "label": "mapping(uint256 => struct Staking.StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(RewardRate)5228_storage": {
            "label": "struct Staking.RewardRate",
            "members": [
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "compoundFrequency",
                "type": "t_enum(CompoundFrequency)5217",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)5256_storage": {
            "label": "struct Staking.StakeInfo",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duration",
                "type": "t_enum(StakingDuration)5213",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "claimedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "58bcb0742dc10015fcae2bd84fa77529837f3a3646b4e7b20bf552550e8a0e15": {
      "address": "0x568245027747f0c0c5dA8da39196E0Eb30b3277a",
      "txHash": "0xaa90f5b31114332efc04e0353630a56445011574add0e6a0f75886ef0dc7e739",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_nextId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:24"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2540",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:25"
          },
          {
            "label": "durationInSeconds",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(StakingDuration)5213,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:50"
          },
          {
            "label": "rewardRates",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage))",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:57"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(StakeInfo)5258_storage)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:74"
          },
          {
            "label": "lastClaimedAt",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:75"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:77"
          },
          {
            "label": "totalClaimedRewards",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:78"
          },
          {
            "label": "unlockAll",
            "offset": 0,
            "slot": "8",
            "type": "t_bool",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:80"
          },
          {
            "label": "rewardsOperator",
            "offset": 1,
            "slot": "8",
            "type": "t_address",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:82"
          },
          {
            "label": "claims",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)330_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)411_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2540": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(CompoundFrequency)5217": {
            "label": "enum Staking.CompoundFrequency",
            "members": [
              "WEEKLY",
              "DAILY",
              "HOURLY"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(StakingDuration)5213": {
            "label": "enum Staking.StakingDuration",
            "members": [
              "FLEXI",
              "DAYS_30",
              "DAYS_180",
              "DAYS_365"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage)": {
            "label": "mapping(enum Staking.StakingDuration => struct Staking.RewardRate)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(StakingDuration)5213,t_uint256)": {
            "label": "mapping(enum Staking.StakingDuration => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage))": {
            "label": "mapping(uint256 => mapping(enum Staking.StakingDuration => struct Staking.RewardRate))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeInfo)5258_storage)": {
            "label": "mapping(uint256 => struct Staking.StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(RewardRate)5228_storage": {
            "label": "struct Staking.RewardRate",
            "members": [
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "compoundFrequency",
                "type": "t_enum(CompoundFrequency)5217",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)5258_storage": {
            "label": "struct Staking.StakeInfo",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duration",
                "type": "t_enum(StakingDuration)5213",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "claimedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "edba613c7b48c88b28410a4c1e0cc192ef06f9e5e69cacf317022378f4b7e7ab": {
      "address": "0x4E6C0bC9dA8C0e7622fa4043869Ed944fb3D4943",
      "txHash": "0x9edd4c7d575f211a96c35cf3e2c85d3e649f1137ced74657752cb39a54b06292",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_nextId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:24"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2540",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:25"
          },
          {
            "label": "durationInSeconds",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(StakingDuration)5213,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:50"
          },
          {
            "label": "rewardRates",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage))",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:57"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(StakeInfo)5258_storage)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:74"
          },
          {
            "label": "lastClaimedAt",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:75"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:77"
          },
          {
            "label": "totalClaimedRewards",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:78"
          },
          {
            "label": "unlockAll",
            "offset": 0,
            "slot": "8",
            "type": "t_bool",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:80"
          },
          {
            "label": "rewardsOperator",
            "offset": 1,
            "slot": "8",
            "type": "t_address",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:82"
          },
          {
            "label": "claims",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)330_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)411_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2540": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(CompoundFrequency)5217": {
            "label": "enum Staking.CompoundFrequency",
            "members": [
              "WEEKLY",
              "DAILY",
              "HOURLY"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(StakingDuration)5213": {
            "label": "enum Staking.StakingDuration",
            "members": [
              "FLEXI",
              "DAYS_30",
              "DAYS_180",
              "DAYS_365"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage)": {
            "label": "mapping(enum Staking.StakingDuration => struct Staking.RewardRate)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(StakingDuration)5213,t_uint256)": {
            "label": "mapping(enum Staking.StakingDuration => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage))": {
            "label": "mapping(uint256 => mapping(enum Staking.StakingDuration => struct Staking.RewardRate))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeInfo)5258_storage)": {
            "label": "mapping(uint256 => struct Staking.StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(RewardRate)5228_storage": {
            "label": "struct Staking.RewardRate",
            "members": [
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "compoundFrequency",
                "type": "t_enum(CompoundFrequency)5217",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)5258_storage": {
            "label": "struct Staking.StakeInfo",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duration",
                "type": "t_enum(StakingDuration)5213",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "claimedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7a38c53d04d4c487f4860f0e4b4ea7da50a7f296d30bb6b12da3f2cf06632505": {
      "address": "0xa174EeBC3A0b2aba21e8A638AC11960892f1921e",
      "txHash": "0x4cd4125a605849f3eb52ba501062377642e39ef8437de1c502ae11333ca5a83d",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_nextId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:24"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2540",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:25"
          },
          {
            "label": "durationInSeconds",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(StakingDuration)5213,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:50"
          },
          {
            "label": "rewardRates",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage))",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:57"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(StakeInfo)5257_storage)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:74"
          },
          {
            "label": "lastClaimedAt",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:75"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:77"
          },
          {
            "label": "totalClaimedRewards",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:78"
          },
          {
            "label": "unlockAll",
            "offset": 0,
            "slot": "8",
            "type": "t_bool",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:80"
          },
          {
            "label": "rewardsOperator",
            "offset": 1,
            "slot": "8",
            "type": "t_address",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:82"
          },
          {
            "label": "claims",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)330_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)411_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2540": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(CompoundFrequency)5217": {
            "label": "enum Staking.CompoundFrequency",
            "members": [
              "WEEKLY",
              "DAILY",
              "HOURLY"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(StakingDuration)5213": {
            "label": "enum Staking.StakingDuration",
            "members": [
              "FLEXI",
              "DAYS_30",
              "DAYS_180",
              "DAYS_365"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage)": {
            "label": "mapping(enum Staking.StakingDuration => struct Staking.RewardRate)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(StakingDuration)5213,t_uint256)": {
            "label": "mapping(enum Staking.StakingDuration => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage))": {
            "label": "mapping(uint256 => mapping(enum Staking.StakingDuration => struct Staking.RewardRate))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeInfo)5257_storage)": {
            "label": "mapping(uint256 => struct Staking.StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(RewardRate)5228_storage": {
            "label": "struct Staking.RewardRate",
            "members": [
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "compoundFrequency",
                "type": "t_enum(CompoundFrequency)5217",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)5257_storage": {
            "label": "struct Staking.StakeInfo",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duration",
                "type": "t_uint8",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "claimedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "df9854cf3512a4879323d609175220033caa66d76cdf93dd523ec6b4102d8ec1": {
      "address": "0x373f4aB84fb45Fa0c70F4CaDFd7C9924A04AC136",
      "txHash": "0x820d0065b443241ebb17d885b494c68e451fb545177fc5a4db3dcf6ebda8e177",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_nextId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:24"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2540",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:25"
          },
          {
            "label": "durationInSeconds",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(StakingDuration)5213,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:50"
          },
          {
            "label": "rewardRates",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage))",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:57"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(StakeInfo)5257_storage)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:74"
          },
          {
            "label": "lastClaimedAt",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:75"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:77"
          },
          {
            "label": "totalClaimedRewards",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:78"
          },
          {
            "label": "unlockAll",
            "offset": 0,
            "slot": "8",
            "type": "t_bool",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:80"
          },
          {
            "label": "rewardsOperator",
            "offset": 1,
            "slot": "8",
            "type": "t_address",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:82"
          },
          {
            "label": "claims",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)330_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)411_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2540": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(CompoundFrequency)5217": {
            "label": "enum Staking.CompoundFrequency",
            "members": [
              "WEEKLY",
              "DAILY",
              "HOURLY"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(StakingDuration)5213": {
            "label": "enum Staking.StakingDuration",
            "members": [
              "FLEXI",
              "DAYS_30",
              "DAYS_180",
              "DAYS_365"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage)": {
            "label": "mapping(enum Staking.StakingDuration => struct Staking.RewardRate)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(StakingDuration)5213,t_uint256)": {
            "label": "mapping(enum Staking.StakingDuration => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage))": {
            "label": "mapping(uint256 => mapping(enum Staking.StakingDuration => struct Staking.RewardRate))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeInfo)5257_storage)": {
            "label": "mapping(uint256 => struct Staking.StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(RewardRate)5228_storage": {
            "label": "struct Staking.RewardRate",
            "members": [
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "compoundFrequency",
                "type": "t_enum(CompoundFrequency)5217",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)5257_storage": {
            "label": "struct Staking.StakeInfo",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tier",
                "type": "t_uint8",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duration",
                "type": "t_uint8",
                "offset": 1,
                "slot": "4"
              },
              {
                "label": "lastClaimedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "claimedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "da0c2af02e7b2a665eee7f47daab081324fb44dcac81a34d47a8b2d2a1942226": {
      "address": "0x64ff1235Df847418dEA61BC8BD9003203CD0fAb9",
      "txHash": "0x5a1bb87e29edb559738a1c9d9304885a21054a78f65efa10099f4a67b5650463",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_nextId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:24"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2540",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:25"
          },
          {
            "label": "durationInSeconds",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(StakingDuration)5213,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:50"
          },
          {
            "label": "rewardRates",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage))",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:57"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(StakeInfo)5256_storage)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:73"
          },
          {
            "label": "lastClaimedAt",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:74"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:76"
          },
          {
            "label": "totalClaimedRewards",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:77"
          },
          {
            "label": "unlockAll",
            "offset": 0,
            "slot": "8",
            "type": "t_bool",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:79"
          },
          {
            "label": "rewardsOperator",
            "offset": 1,
            "slot": "8",
            "type": "t_address",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:81"
          },
          {
            "label": "claims",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:83"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)330_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)411_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2540": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(CompoundFrequency)5217": {
            "label": "enum Staking.CompoundFrequency",
            "members": [
              "WEEKLY",
              "DAILY",
              "HOURLY"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(StakingDuration)5213": {
            "label": "enum Staking.StakingDuration",
            "members": [
              "FLEXI",
              "DAYS_30",
              "DAYS_180",
              "DAYS_365"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage)": {
            "label": "mapping(enum Staking.StakingDuration => struct Staking.RewardRate)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(StakingDuration)5213,t_uint256)": {
            "label": "mapping(enum Staking.StakingDuration => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage))": {
            "label": "mapping(uint256 => mapping(enum Staking.StakingDuration => struct Staking.RewardRate))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeInfo)5256_storage)": {
            "label": "mapping(uint256 => struct Staking.StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(RewardRate)5228_storage": {
            "label": "struct Staking.RewardRate",
            "members": [
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "compoundFrequency",
                "type": "t_enum(CompoundFrequency)5217",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)5256_storage": {
            "label": "struct Staking.StakeInfo",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duration",
                "type": "t_enum(StakingDuration)5213",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastClaimedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "claimedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "65e6e5c91756dfdfefbbde1578758124527ae345895d05bcfac14a7aa340618c": {
      "address": "0x9FAe495B36501aF713f3CeB371Ac5A7aA4069B29",
      "txHash": "0xe46b8cadbef324b4400bc9145b8127dd0454e013ff7b3889fa86b0f8ac3eab40",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_nextId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:24"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2540",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:25"
          },
          {
            "label": "durationInSeconds",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(StakingDuration)5213,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:50"
          },
          {
            "label": "rewardRates",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage))",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:57"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(StakeInfo)5257_storage)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:74"
          },
          {
            "label": "lastClaimedAt",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:75"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:77"
          },
          {
            "label": "totalClaimedRewards",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:78"
          },
          {
            "label": "unlockAll",
            "offset": 0,
            "slot": "8",
            "type": "t_bool",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:80"
          },
          {
            "label": "rewardsOperator",
            "offset": 1,
            "slot": "8",
            "type": "t_address",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:82"
          },
          {
            "label": "claims",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:84"
          },
          {
            "label": "bonuses",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)330_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)411_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2540": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(CompoundFrequency)5217": {
            "label": "enum Staking.CompoundFrequency",
            "members": [
              "WEEKLY",
              "DAILY",
              "HOURLY"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(StakingDuration)5213": {
            "label": "enum Staking.StakingDuration",
            "members": [
              "FLEXI",
              "DAYS_30",
              "DAYS_180",
              "DAYS_365"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage)": {
            "label": "mapping(enum Staking.StakingDuration => struct Staking.RewardRate)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(StakingDuration)5213,t_uint256)": {
            "label": "mapping(enum Staking.StakingDuration => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage))": {
            "label": "mapping(uint256 => mapping(enum Staking.StakingDuration => struct Staking.RewardRate))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeInfo)5257_storage)": {
            "label": "mapping(uint256 => struct Staking.StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(RewardRate)5228_storage": {
            "label": "struct Staking.RewardRate",
            "members": [
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "compoundFrequency",
                "type": "t_enum(CompoundFrequency)5217",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)5257_storage": {
            "label": "struct Staking.StakeInfo",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tier",
                "type": "t_uint8",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duration",
                "type": "t_uint8",
                "offset": 1,
                "slot": "4"
              },
              {
                "label": "lastClaimedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "claimedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b22301305199af9348704b693401d4ba6a025dbdf415ba5dd2e13078aa763193": {
      "address": "0x70f637E486EF7Beca233e5fbd70786B2FD81b60D",
      "txHash": "0x6222aa792636645d1e9b11b48af051df6698c8b10fe95df8e8a139c898f32167",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_nextId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:24"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2540",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:25"
          },
          {
            "label": "durationInSeconds",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_enum(StakingDuration)5213,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:50"
          },
          {
            "label": "rewardRates",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage))",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:57"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(StakeInfo)5257_storage)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:74"
          },
          {
            "label": "lastClaimedAt",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:75"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:77"
          },
          {
            "label": "totalClaimedRewards",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:78"
          },
          {
            "label": "unlockAll",
            "offset": 0,
            "slot": "8",
            "type": "t_bool",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:80"
          },
          {
            "label": "rewardsOperator",
            "offset": 1,
            "slot": "8",
            "type": "t_address",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:82"
          },
          {
            "label": "claims",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:84"
          },
          {
            "label": "bonuses",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Staking",
            "src": "contracts/tokenomics/Staking.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721EnumerableStorage)330_storage": {
            "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
            "members": [
              {
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)411_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2540": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(CompoundFrequency)5217": {
            "label": "enum Staking.CompoundFrequency",
            "members": [
              "WEEKLY",
              "DAILY",
              "HOURLY"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(StakingDuration)5213": {
            "label": "enum Staking.StakingDuration",
            "members": [
              "FLEXI",
              "DAYS_30",
              "DAYS_180",
              "DAYS_365"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage)": {
            "label": "mapping(enum Staking.StakingDuration => struct Staking.RewardRate)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(StakingDuration)5213,t_uint256)": {
            "label": "mapping(enum Staking.StakingDuration => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(StakingDuration)5213,t_struct(RewardRate)5228_storage))": {
            "label": "mapping(uint256 => mapping(enum Staking.StakingDuration => struct Staking.RewardRate))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeInfo)5257_storage)": {
            "label": "mapping(uint256 => struct Staking.StakeInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(RewardRate)5228_storage": {
            "label": "struct Staking.RewardRate",
            "members": [
              {
                "label": "rate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "compoundFrequency",
                "type": "t_enum(CompoundFrequency)5217",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)5257_storage": {
            "label": "struct Staking.StakeInfo",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tier",
                "type": "t_uint8",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "duration",
                "type": "t_uint8",
                "offset": 1,
                "slot": "4"
              },
              {
                "label": "lastClaimedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "claimedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
